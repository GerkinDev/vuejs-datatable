{"version":3,"file":"vuejs-datatable.esm.js","sources":["../src/vue-datatable-cell.vue","../src/vue-datatable-header.vue","../src/classes/settings.js","../src/vue-datatable-pager-button.vue","../src/classes/column.js","../src/vue-datatable.vue","../src/vue-datatable-pager.vue","../src/classes/handler.js","../src/classes/table-type.js","../src/classes/factory.js","../index.js"],"sourcesContent":["<style></style>\n\n<template>\n\t<td :style=\"{'text-align': column.align}\">\n\t\t <component v-if=\"column.component\" :is=\"column.component\" :row=\"row\" :column=\"column\"></component>\n\t\t <span v-else-if=\"column.interpolate\" v-html=\"content\"></span>\n\t\t <span v-else>{{ content }}</span>\n\t</td>\n</template>\n\n<script>\nexport default {\n\tprops: {\n\t\tcolumn: [Object, Array],\n\t\trow: [Object, Array]\n\t},\n\tcomputed: {\n\t\tcontent(){\n\t\t\treturn this.column.getRepresentation(this.row);\n\t\t}\n\t},\n}\n</script>\n","<style></style>\n\n<template>\n\t<th :style=\"{'text-align': column.align}\" :class=\"column.headerClass\">\n        <component v-if=\"column.headerComponent\" :is=\"column.headerComponent\" :column=\"column\"></component>\n        <span v-else>{{ column.label  }}</span>\n\t\t<span\n\t\t\tv-if=\"column.sortable\"\n\t\t\t:class=\"classes\"\n\t\t\t@click=\"toggleSort\"\n\t\t></span>\n\t</th>\n</template>\n\n<script>\nexport default {\n\tprops: {\n\t\tmodel: {\n\t\t\tprop: 'direction',\n\t\t\tevent: 'change'\n\t\t},\n\t\tcolumn: [Object, Array],\n\t\tsettings: Object,\n\t\tdirection: {\n\t\t\ttype: String,\n\t\t\tdefault: null\n\t\t}\n\t},\n\tcomputed: {\n\t\tcanSort(){\n\t\t\treturn this.column.sortable;\n\t\t},\n\t\tis_sorted_ascending(){\n\t\t\treturn this.direction === 'asc';\n\t\t},\n\t\tis_sorted_descending(){\n\t\t\treturn this.direction === 'desc';\n\t\t},\n\t\tis_sorted(){\n\t\t\treturn this.is_sorted_descending || this.is_sorted_ascending;\n\t\t},\n\t\tclasses(){\n\t\t\tvar available_classes = this.settings.get('table.sorting.classes');\n\t\t\tvar classes = available_classes.canSort;\n\n\t\t\tif(!this.canSort){\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif(!this.is_sorted){\n\t\t\t\tclasses = classes.concat(available_classes.sortNone);\n\n\t\t\t\treturn this.joinClasses(classes);\n\t\t\t}\n\n\t\t\tif(this.is_sorted_ascending){\n\t\t\t\tclasses = classes.concat(available_classes.sortAsc);\n\t\t\t}\n\n\t\t\tif(this.is_sorted_descending){\n\t\t\t\tclasses = classes.concat(available_classes.sortDesc);\n\t\t\t}\n\n\t\t\treturn this.joinClasses(classes);\n\t\t}\n\t},\n\tmethods: {\n\t\tjoinClasses(classes){\n\t\t\treturn this.unique(classes).join(' ');\n\t\t},\n\t\ttoggleSort(){\n\t\t\tif(!this.direction || this.direction === null){\n\t\t\t\tthis.$emit('change', 'asc', this.column);\n\t\t\t}else if(this.direction === 'asc'){\n\t\t\t\tthis.$emit('change', 'desc', this.column);\n\t\t\t}else{\n\t\t\t\tthis.$emit('change', null, this.column);\n\t\t\t}\n\n\t\t\treturn;\n\t\t},\n\t\tunique(ar) {\n\t\t    var seen = {};\n\n\t\t    return ar.filter(function(item) {\n\t\t        return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n\t\t    });\n\t\t}\n\t},\n}\n</script>\n","import { get, set } from 'object-path';\n\nclass Settings {\n    constructor(){\n        this.properties = {\n            table: {\n                class: 'table table-hover table-striped',\n                row: {\n                    classes: ['']\n                },\n                sorting: {\n                    classes: {\n                        canSort: ['sort'],\n                        sortNone: ['glyphicon', 'glyphicon-sort'],\n                        sortAsc: ['glyphicon', 'glyphicon-sort-by-alphabet'],\n                        sortDesc: ['glyphicon', 'glyphicon-sort-by-alphabet-alt'],\n                    }\n                }\n            },\n            pager: {\n                classes: {\n                    pager: 'pagination',\n                    li: '',\n                    a: '',\n                    selected: 'active',\n                    disabled: 'disabled'\n                },\n                icons: {\n                    previous: '&lt;',\n                    next: '&gt;',\n                }\n            }\n        };\n    }\n\n    get(path){\n        return get(this.properties, path);\n    }\n\n    set(path, value){\n        set(this.properties, path, value);\n\n        return this;\n    }\n\n    merge(settings){\n        this.properties = this._mergeObjects(this.properties, settings);\n\n        return this;\n    }\n\n    _mergeObjects(obj_1, obj_2){\n        for(var key in obj_2){\n\n            if(obj_2[key] === null){\n                obj_1[key] = obj_2[key];\n\n                continue;\n            }else if(typeof obj_2[key] === 'object'){\n                obj_1[key] = this._mergeObjects(obj_1[key], obj_2[key]);\n\n                continue;\n            }\n\n            obj_1[key] = obj_2[key];\n        }\n\n        return obj_1;\n    }\n}\n\nexport default Settings;\n","<style></style>\n\n<template>\n\t<li :class=\"li_classes\">\n\t\t<a href=\"javascript: void(0);\" :class=\"a_classes\" @click=\"sendClick\">\n\t\t\t<slot>{{ value }}</slot>\n\t\t</a>\n\t</li>\n</template>\n\n<script>\nimport Settings from './classes/settings.js';\n\nexport default {\n\tprops: {\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tselected: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tvalue: {\n\t\t\ttype: Number,\n\t\t\tdefault: null\n\t\t},\n\t},\n\tcomputed: {\n\t\tli_classes(){\n\t\t\tvar classes = [];\n\n\t\t\tif(this.settings.get('pager.classes.li')){\n\t\t\t\tclasses.push(this.settings.get('pager.classes.li'));\n\t\t\t}\n\n\t\t\tif(this.disabled){\n\t\t\t\tclasses.push(this.settings.get('pager.classes.disabled'));\n\t\t\t}\n\n\t\t\tif(this.selected){\n\t\t\t\tclasses.push(this.settings.get('pager.classes.selected'));\n\t\t\t}\n\n\t\t\treturn classes.join(' ');\n\t\t},\n\t\ta_classes(){\n\t\t\tvar classes = [];\n\n\t\t\tif(this.settings.get('pager.classes.a')){\n\t\t\t\tclasses.push(this.settings.get('pager.classes.a'));\n\t\t\t}\n\n\t\t\treturn classes.join(' ');\n\t\t},\n\t\tsettings(){\n\t\t\treturn this.$parent.settings;\n\t\t},\n\t},\n\tmethods: {\n\t\tsendClick(){\n\t\t\tif(!this.disabled){\n\t\t\t\tthis.$emit('click', this.value);\n\t\t\t}\n\t\t}\n\t}\n}\n</script>\n","import { get } from 'object-path';\n\nclass Column {\n    constructor(props){\n        this.setAlignment(props.align);\n        this.label = props.label || '';\n        this.field = props.field || null;\n        this.representedAs = props.representedAs || null;\n        this.component = props.component || null;\n        this.interpolate = props.interpolate || false;\n        this.headerComponent = props.headerComponent || null;\n        this.sortable = this.isSortable(props);\n        this.filterable = this.isFilterable(props);\n        this.headerClass = props.headerClass || '';\n    }\n\n    setAlignment(value){\n        if(!value || typeof value !== 'string'){\n            this.align = 'left';\n\n            return this;\n        }\n\n        if(value.toLowerCase() === 'center'){\n            this.align = 'center';\n\n            return this;\n        }\n\n        if(value.toLowerCase() === 'right'){\n            this.align = 'right';\n\n            return this;\n        }\n\n        this.align = 'left';\n\n        return this;\n    }\n\n    isFilterable(props){\n        if(props.filterable === false){\n            return false;\n        }\n\n        if(!props.field && !props.representedAs){\n            return false;\n        }\n\n        if(this.component && !(this.representedAs || this.field)){\n            return false;\n        }\n\n        return true;\n    }\n\n    isSortable(props){\n        if(props.sortable === false){\n            return false;\n        }\n\n        if(!props.field && !props.representedAs){\n            return false;\n        }\n\n        if(this.component && !(this.representedAs || this.field)){\n            return false;\n        }\n\n        return true;\n    }\n\n    getRepresentation(row) {\n        if(this.representedAs && typeof this.representedAs === 'function'){\n            return this.representedAs(row);\n        }\n\n        if(this.component && this.filterable){\n            return this.plain_text_function(row, this);\n        }\n\n        return get(row, this.field);\n    }\n\n    getValue(row){\n        return this.getRepresentation(row);\n    }\n\n    matches(row, filter_string) {\n        let col_representation = ('' + this.getRepresentation(row) + '').toLowerCase();\n\n        return col_representation.indexOf(filter_string.toLowerCase()) !== -1;\n    }\n}\n\nexport default Column;\n","<style></style>\n\n<template>\n\t<table :class=\"table_class\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<datatable-header\n\t\t\t\t\tv-for=\"(head_column, i) in normalized_columns\"\n\t\t\t\t\t:key=\"i\"\n\t\t\t\t\t:column=\"head_column\"\n\t\t\t\t\t:settings=\"settings\"\n\t\t\t\t\t:direction=\"getSortDirectionForColumn(head_column)\"\n\t\t\t\t\t@change=\"setSortDirectionForColumn\"\n\t\t\t\t></datatable-header>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<slot v-for=\"(row, i) in processed_rows\" :row=\"row\" :columns=\"normalized_columns\">\n\t\t\t    <tr :class=\"getRowClasses(row)\" :key=\"i\">\n\t\t\t\t\t<datatable-cell\n\t\t\t\t\t\tv-for=\"(column, j) in normalized_columns\"\n\t\t\t\t\t\t:key=\"j\"\n\t\t\t\t\t\t:column=\"column\"\n\t\t\t\t\t\t:row=\"row\"\n\t\t\t\t\t></datatable-cell>\n\t\t\t    </tr>\n\t\t\t</slot>\n\t\t\t<tr v-if=\"processed_rows.length == 0\">\n\t\t\t\t<td :colspan=\"normalized_columns.length\">\n\t\t\t\t\t<slot name=\"no-results\"></slot>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t\t<tfoot v-if=\"$slots.footer || $scopedSlots.footer\">\n\t\t\t<slot name=\"footer\" :rows=\"processed_rows\"></slot>\n\t\t</tfoot>\n\t</table>\n</template>\n\n<script>\nimport Column from './classes/column.js';\n\nexport default {\n\tprops: {\n\t\tname: {\n\t\t\ttype: String,\n\t\t\tdefault: 'default'\n\t\t},\n\t\tcolumns: [Object, Array],\n\t\tdata: [Object, Array, String, Function],\n\t\tfilterBy: {\n\t\t\ttype: [String, Array],\n\t\t\tdefault: null\n\t\t},\n\t\trowClasses: {\n\t\t\ttype: [String, Array, Object, Function],\n\t\t\tdefault: null\n\t\t}\n\t},\n\tdata: () => ({\n\t\tsort_by: null,\n\t\tsort_dir: null,\n\t\ttotal_rows: 0,\n\t\tpage: 1,\n\t\tper_page: null,\n\t\tprocessed_rows: [],\n\t}),\n\tcomputed: {\n\t\trows(){\n\t\t\treturn this.data.slice(0);\n\t\t},\n\t\tsettings(){\n\t\t\treturn this.$options.settings;\n\t\t},\n\t\thandler(){\n\t\t\treturn this.$options.handler;\n\t\t},\n\t\tnormalized_columns(){\n\t\t\treturn this.columns.map(function(column){\n\t\t\t\treturn new Column(column);\n\t\t\t});\n\t\t},\n\t\ttable_class(){\n\t\t\treturn this.settings.get('table.class');\n\t\t},\n\t},\n\tmethods: {\n\t\tgetSortDirectionForColumn(column_definition){\n\t\t\tif(this.sort_by !== column_definition){\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.sort_dir;\n\t\t},\n\t\tsetSortDirectionForColumn(direction, column){\n\t\t\tthis.sort_by = column;\n\t\t\tthis.sort_dir = direction;\n\t\t},\n\t\tprocessRows(){\n\t\t\tif(typeof this.data === 'function'){\n\t\t\t\tlet params = {\n\t\t\t\t\tfilter: this.filterBy,\n\t\t\t\t\tsort_by: this.sort_by ? this.sort_by.field : null,\n\t\t\t\t\tsort_dir: this.sort_dir,\n\t\t\t\t\tpage_length: this.per_page,\n\t\t\t\t\tpage_number: this.page,\n\t\t\t\t};\n\n\t\t\t\tlet processed_data = this.data(params, function(rows, row_count){\n\t\t\t\t\tthis.setRows(rows);\n\t\t\t\t\tthis.setTotalRowCount(row_count);\n\t\t\t\t}.bind(this));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet filtered_data = this.handler.filterHandler(\n\t\t\t\tthis.rows,\n\t\t\t\tthis.filterBy,\n\t\t\t\tthis.normalized_columns\n\t\t\t);\n\n\t\t\tlet sorted_data = this.handler.sortHandler(\n\t\t\t\tfiltered_data,\n\t\t\t\tthis.sort_by,\n\t\t\t\tthis.sort_dir\n\t\t\t);\n\n\t\t\tlet paged_data = this.handler.paginateHandler(\n\t\t\t\tsorted_data,\n\t\t\t\tthis.per_page,\n\t\t\t\tthis.page\n\t\t\t);\n\n\t\t\tthis.handler.displayHandler(\n\t\t\t\tpaged_data,\n\t\t\t\t{\n\t\t\t\t\tfiltered_data: filtered_data,\n\t\t\t\t\tsorted_data: sorted_data,\n\t\t\t\t\tpaged_data: paged_data,\n\t\t\t\t},\n\t\t\t\tthis.setRows,\n\t\t\t\tthis.setTotalRowCount\n\t\t\t);\n\t\t},\n\t\tsetRows(rows){\n\t\t\tthis.processed_rows = rows;\n\t\t},\n\t\tsetTotalRowCount(value){\n\t\t\tthis.total_rows = value;\n\t\t},\n\t\tgetRowClasses(row){\n\t\t\tvar row_classes = this.rowClasses;\n\n\t\t\tif(row_classes === null){\n\t\t\t\trow_classes = this.settings.get('table.row.classes');\n\t\t\t}\n\n\t\t\tif(typeof row_classes === 'function'){\n\t\t\t\treturn row_classes(row);\n\t\t\t}\n\n\t\t\treturn row_classes;\n\t\t}\n\t},\n\tcreated(){\n\t\tthis.$datatables[this.name] = this;\n\t\tthis.$root.$emit('table.ready', this.name);\n\n\t\tthis.$watch(function(){\n\t\t\treturn this.data;\n\t\t}.bind(this), this.processRows, {deep: true});\n\n\t\tthis.$watch('columns', this.processRows);\n\n\t\tthis.$watch(function(){\n\t\t\treturn this.filterBy + this.per_page + this.page + this.sort_by + this.sort_dir;\n\t\t}.bind(this), this.processRows);\n\n\t\tthis.processRows();\n\t},\n\thandler: null,\n\tsettings: null\n}\n</script>\n","<style></style>\n\n<template>\n\t<nav v-if=\"show\">\n\t\t<ul v-if=\"type === 'abbreviated'\" :class=\"pagination_class\">\n\t\t\t<datatable-button v-if=\"page - 3 >= 1\" :value=\"1\" @click=\"setPageNum\"></datatable-button>\n\t\t\t<datatable-button v-if=\"page - 4 >= 1\" disabled>...</datatable-button>\n\n\t\t\t<datatable-button v-if=\"page - 2 >= 1\" :value=\"page - 2\" @click=\"setPageNum\"></datatable-button>\n\t\t\t<datatable-button v-if=\"page - 1 >= 1\" :value=\"page - 1\" @click=\"setPageNum\"></datatable-button>\n\n\t\t\t<datatable-button :value=\"page\" selected></datatable-button>\n\n\t\t\t<datatable-button v-if=\"page + 1 <= total_pages\" :value=\"page + 1\" @click=\"setPageNum\"></datatable-button>\n\t\t\t<datatable-button v-if=\"page + 2 <= total_pages\" :value=\"page + 2\" @click=\"setPageNum\"></datatable-button>\n\n\t\t\t<datatable-button v-if=\"page + 4 <= total_pages\" disabled>...</datatable-button>\n\t\t\t<datatable-button v-if=\"page + 3 <= total_pages\" :value=\"total_pages\" @click=\"setPageNum\"></datatable-button>\n\t\t</ul>\n\t\t<ul v-else-if=\"type === 'long'\" :class=\"pagination_class\">\n\t\t\t<datatable-button v-for=\"i in total_pages\" :key=\"i\" :value=\"i\" @click=\"setPageNum\" :selected=\"i === page\"></datatable-button>\n\t\t</ul>\n\t\t<ul v-else-if=\"type === 'short'\" :class=\"pagination_class\">\n\t\t\t<datatable-button :disabled=\"page - 1 < 1\" :value=\"page - 1\" @click=\"setPageNum\"><span v-html=\"previous_icon\"></span></datatable-button>\n\t\t\t<datatable-button :value=\"page\" selected></datatable-button>\n\t\t\t<datatable-button :disabled=\"page + 1 > total_pages\" :value=\"page + 1\" @click=\"setPageNum\"><span v-html=\"next_icon\"></span></datatable-button>\n\t\t</ul>\n\t</nav>\n</template>\n\n<script>\nexport default {\n\tmodel: {\n\t\tprop: 'page',\n\t\tevent: 'change'\n\t},\n\tprops: {\n\t\ttable: {\n\t\t\ttype: String,\n\t\t\tdefault: 'default'\n\t\t},\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tdefault: 'long'\n\t\t},\n\t\tperPage: {\n\t\t\ttype: Number,\n\t\t\tdefault: 10\n\t\t},\n\t\tpage: {\n\t\t\ttype: Number,\n\t\t\tdefault: 1\n\t\t}\n\t},\n\tdata: () => ({\n\t\ttable_instance: null,\n\t}),\n\tcomputed: {\n\t\tshow(){\n\t\t\treturn this.table_instance && this.total_rows > 0;\n\t\t},\n\t\ttotal_rows(){\n\t\t\tif(this.table_instance){\n\t\t\t\treturn this.table_instance.total_rows;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t},\n\t\tpagination_class(){\n\t\t\treturn this.settings.get('pager.classes.pager');\n\t\t},\n\t\tdisabled_class(){\n\t\t\treturn this.settings.get('pager.classes.disabled');\n\t\t},\n\t\tprevious_link_classes(){\n\t\t\tif(this.page - 1 < 1){\n\t\t\t\treturn this.settings.get('pager.classes.disabled');\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\t\tnext_link_classes(){\n\t\t\tif(this.page + 1 > this.total_pages){\n\t\t\t\treturn this.settings.get('pager.classes.disabled');\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\t\ttotal_pages(){\n\t\t\tif(!(this.total_rows > 0)){\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\treturn Math.ceil(this.total_rows / this.perPage);\n\t\t},\n\t\tprevious_icon(){\n\t\t\treturn this.settings.get('pager.icons.previous');\n\t\t},\n\t\tnext_icon(){\n\t\t\treturn this.settings.get('pager.icons.next');\n\t\t},\n\t\tsettings(){\n\t\t\treturn this.$options.settings;\n\t\t},\n\t},\n\tmethods: {\n\t\tsetPageNum(number){\n\t\t\tthis.table_instance.page = number;\n\t\t\tthis.table_instance.per_page = this.perPage;\n\n\t\t\tthis.$emit('change', number);\n\t\t},\n\t\tgetClassForPage(number){\n\t\t\tif(this.page == number){\n\t\t\t\treturn this.settings.get('pager.classes.selected');\n\t\t\t}\n\n\t\t\treturn '';\n\t\t}\n\t},\n\twatch: {\n\t\ttotal_rows(){\n\t\t\tif(this.page > this.total_pages){\n\t\t\t\tthis.setPageNum(this.total_pages);\n\t\t\t}\n\t\t},\n\t\tperPage(){\n\t\t\tvar page = this.page;\n\n\t\t\tif(page > this.total_pages){\n\t\t\t\tpage = this.total_pages\n\t\t\t}\n\n\t\t\tthis.setPageNum(page);\n\t\t}\n\t},\n\tcreated(){\n\t\tif(this.$datatables[this.table]){\n\t\t\tthis.table_instance = this.$datatables[this.table];\n\t\t\tthis.table_instance.per_page = this.perPage;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.$root.$on('table.ready', function(table_name){\n\t\t\tif(table_name === this.table){\n\t\t\t\tthis.table_instance = this.$datatables[this.table];\n\t\t\t\tthis.table_instance.per_page = this.perPage;\n\t\t\t}\n\t\t}.bind(this));\n\t},\n\tsettings: null\n}\n</script>\n","class Handler {\n    constructor(){\n        this.filterHandler = this.handleFilter;\n        this.sortHandler = this.handleSort;\n        this.paginateHandler = this.handlePaginate;\n        this.displayHandler = this.handleDisplay;\n    }\n    handleFilter(data, filter, columns){\n        if(!filter){\n            return data;\n        }\n\n        if(!Array.isArray(filter)) {\n            filter = [filter];\n        }\n\n        return data.filter(function(row){\n            for(var j in filter) {\n                let filter_strings = filter[j].split(/\\s/);\n                let matched = true;\n                for(var i in filter_strings){\n                    if(!this.rowMatches(row, filter_strings[i], columns)){\n                        matched = false;\n                    }\n                }\n                if(matched) {\n                    return true;\n                }\n            }\n            return false;\n        }.bind(this));\n    }\n    rowMatches(row, filter_string, columns){\n        for(var i in columns){\n            if(columns[i].matches(row, filter_string)){\n                return true;\n            }\n        }\n\n        return false;\n    }\n    handleSort(filtered_data, sort_column, sort_dir){\n\t\tif(!sort_column || sort_dir === null){\n\t\t\treturn filtered_data;\n\t\t}\n\n\t\treturn filtered_data.sort(function(a, b){\n\t\t\tvar value_a = sort_column.getRepresentation(a);\n\t\t\tvar value_b = sort_column.getRepresentation(b);\n\n\t\t\tif(value_a == value_b){\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tvar sort_val = value_a > value_b ? 1 : -1;\n\n\t\t\tif(sort_dir === 'desc'){\n\t\t\t\tsort_val *= -1;\n\t\t\t}\n\n\t\t\treturn sort_val;\n\t\t});\n    }\n    handlePaginate(sorted_data, page_count, page_number){\n\t\tif(!page_count){\n\t\t\treturn sorted_data;\n\t\t}\n\n\t\tif(page_number < 1){\n\t\t\tpage_number = 1;\n\t\t}\n\n        let start_index = (page_number - 1) * page_count;\n        let end_index = (page_number * page_count);\n\n        return sorted_data.slice(start_index, end_index);\n    }\n    handleDisplay(processed_data, process_steps, setRows, setTotalRowCount){\n        setRows(processed_data);\n        setTotalRowCount(process_steps.filtered_data.length);\n    }\n}\n\nexport default Handler;\n","import VueDatatable from '../vue-datatable.vue';\nimport VueDatatablePager from '../vue-datatable-pager.vue';\nimport Handler from './handler.js';\nimport Settings from './settings.js';\n\nclass TableType {\n    constructor(id){\n        this.id = id;\n\n        this.handler = new Handler();\n        this.settings = new Settings();\n    }\n\n    getId(){\n        return this.id;\n    }\n\n    setFilterHandler(closure){\n        this.handler.filterHandler = closure;\n\n        return this;\n    }\n\n    setSortHandler(closure){\n        this.handler.sortHandler = closure;\n\n        return this;\n    }\n\n    setPaginateHandler(closure){\n        this.handler.paginateHandler = closure;\n\n        return this;\n    }\n\n    setDisplayHandler(closure){\n        this.handler.displayHandler = closure;\n\n        return this;\n    }\n\n    setting(path, value){\n        if(value === undefined){\n            return this.settings.get(path);\n        }\n\n        this.settings.set(path, value);\n\n        return this;\n    }\n\n    mergeSettings(settings){\n        this.settings.merge(settings);\n\n        return this;\n    }\n\n    getTableDefinition(){\n        let definition = this.clone(VueDatatable);\n        definition.handler = this.handler;\n        definition.settings = this.settings;\n        definition.name = this.id;\n\n        return definition;\n    }\n\n    getPagerDefinition(){\n        let definition = this.clone(VueDatatablePager);\n        definition.settings = this.settings;\n        definition.name = this.id;\n\n        return definition;\n    }\n\n    clone(obj) {\n        var copy;\n\n        if (obj === null || typeof obj !== \"object\") {\n            return obj;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            copy = [];\n\n            for (var i = 0; i < obj.length; i++) {\n                copy[i] = this.clone(obj[i]);\n            }\n\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            copy = {};\n\n            for (var attr in obj) {\n                if (obj.hasOwnProperty(attr)) {\n                    copy[attr] = this.clone(obj[attr]);\n                }\n            }\n\n            return copy;\n        }\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n}\n\nexport default TableType;\n","import VueDatatableCell from '../vue-datatable-cell.vue';\nimport VueDatatableHeader from '../vue-datatable-header.vue';\nimport VueDatatablePagerButton from '../vue-datatable-pager-button.vue';\nimport TableType from './table-type.js';\nimport Settings from './settings.js';\n\nclass DatatableFactory {\n    constructor(){\n        this.table_types = [];\n        this.use_default_type = true;\n        this.default_table_settings = new Settings();\n    }\n\n    useDefaultType(value){\n        this.use_default_type = !!value;\n\n        return this;\n    }\n\n    registerTableType(component_name, callback){\n        let table_type = new TableType(component_name);\n\n        this.table_types.push(table_type);\n\n        if(callback && typeof callback === 'function'){\n            callback(table_type);\n        }\n\n        return this;\n    }\n\n    install(Vue){\n        Vue.prototype.$datatables = {};\n\n        Vue.component('datatable-cell', VueDatatableCell);\n        Vue.component('datatable-header', VueDatatableHeader);\n        Vue.component('datatable-button', VueDatatablePagerButton);\n\n        if(this.use_default_type){\n            this.registerTableType('datatable', function(table_type){\n                table_type.mergeSettings(this.default_table_settings.properties);\n            }.bind(this));\n        }\n\n        for(var i in this.table_types){\n            this.installTableType(this.table_types[i].getId(), this.table_types[i], Vue);\n        }\n    }\n\n    installTableType(id, table_type, Vue){\n        Vue.component(id, table_type.getTableDefinition());\n        Vue.component(id + '-pager', table_type.getPagerDefinition());\n    }\n}\n\nexport default DatatableFactory;\n","import DatatableFactory from './src/classes/factory.js';\n\nexport default (new DatatableFactory());\n"],"names":["Settings","constructor","properties","table","class","row","classes","sorting","canSort","sortNone","sortAsc","sortDesc","pager","li","a","selected","disabled","icons","previous","next","get","path","this","set","value","merge","settings","_mergeObjects","obj_1","obj_2","key","Column","props","setAlignment","align","label","field","representedAs","component","interpolate","headerComponent","sortable","isSortable","filterable","isFilterable","headerClass","toLowerCase","getRepresentation","plain_text_function","getValue","matches","filter_string","indexOf","Handler","filterHandler","handleFilter","sortHandler","handleSort","paginateHandler","handlePaginate","displayHandler","handleDisplay","data","filter","columns","Array","isArray","j","filter_strings","split","matched","i","rowMatches","bind","filtered_data","sort_column","sort_dir","sort","b","value_a","value_b","sort_val","sorted_data","page_count","page_number","start_index","end_index","slice","processed_data","process_steps","setRows","setTotalRowCount","length","TableType","id","handler","getId","setFilterHandler","closure","setSortHandler","setPaginateHandler","setDisplayHandler","setting","undefined","mergeSettings","getTableDefinition","definition","clone","VueDatatable","name","getPagerDefinition","VueDatatablePager","obj","copy","Object","attr","hasOwnProperty","Error","DatatableFactory","table_types","use_default_type","default_table_settings","useDefaultType","registerTableType","component_name","callback","table_type","push","install","Vue","prototype","$datatables","VueDatatableCell","VueDatatableHeader","VueDatatablePagerButton","installTableType"],"mappings":"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"}